packages <- c("jsonlite", "dplyr", "purrr", "tidytext", "ggplot2", "lubridate")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
#setwd('C:/Users/alin/Documents/SelfStudy/MyLearning/Kaggle/TwoSigma/data')
setwd('/home/alin/MyLearning/Kaggle/TwoSigma/data')
data <- fromJSON("train.json")
# unlist every variable except `photos` and `features` and convert to tibble
vars <- setdiff(names(data), c("photos", "features"))
#library(tibble)?
#library(purrr)
train_df <- map_at(data, vars, unlist) %>%
tibble::as_tibble(.) %>%
mutate(interest_level = factor(interest_level, c("low", "medium", "high")))
names(data)
feature_df <- map_at(data, vars, unlist) %>%
tibble::as_tibble(.) %>%
select(listing_id, features, interest_level) %>%
mutate(interest_level = factor(interest_level, c("low", "medium", "high")))
feature_df
head(feature_df, n =5)
is_empty
a <- feature_df[1, 'features']
a
b <- unlist(a)
b
b[1]
b[2]
names(b)
class(b)
is.vector(b)
is.list(b)
a <- feature_df[10, 'features']
a
b <- unlist(a)
b
a <- feature_df[5000, 'features']
a
unlist(a)
a1 <- unlist(feature_df[1, 'features'])
a2 <- unlist(feature_df[2, 'features'])
a1
a2
?union
g <- union(a1,a2)
g
is.vector(g)
features
features <-unlist(feature_df[1, 'features'])
for(i in 2:20){
features <- union(features, unlist(feature_df[i, 'features']))
}
features
features <-unlist(feature_df[1, 'features'])
for(i in 2:nrow(feature-df)){
features <- union(features, unlist(feature_df[i, 'features']))
}
features <-unlist(feature_df[1, 'features'])
for(i in 2:nrow(feature_df)){
features <- union(features, unlist(feature_df[i, 'features']))
}
features
length(features)
features[1:30]
a <- features[1:30]
a
a <- tolower(a)
a
b <- union(a, c())
b
features[30:50]
features <-tolower(unlist(feature_df[1, 'features']))
for(i in 2:nrow(feature_df)){
features <- union(features, tolower(unlist(feature_df[i, 'features'])))
}
length(features)
features[1:50]
fea <- data.frame(feature = features)
str(fea)
fea[1:20]
fea[1:20,]
fea$feature <- as.character(fea$feature)
str(fea)
fea[1:10,]
?write.csv
pwd
write.table(fea, file = '/home/alin/MyLearning/Kaggle/TwoSigma/data/feature.csv', row.names = FALSE)
q()
