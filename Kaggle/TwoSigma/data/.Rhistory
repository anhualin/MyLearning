packages <- c("jsonlite", "dplyr", "purrr", "tidytext", "ggplot2", "lubridate")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
#setwd('C:/Users/alin/Documents/SelfStudy/MyLearning/Kaggle/TwoSigma/data')
setwd('/home/alin/MyLearning/Kaggle/TwoSigma/data')
data <- fromJSON("train.json")
# unlist every variable except `photos` and `features` and convert to tibble
vars <- setdiff(names(data), c("photos", "features"))
#library(tibble)?
#library(purrr)
train_df <- map_at(data, vars, unlist) %>%
tibble::as_tibble(.) %>%
mutate(interest_level = factor(interest_level, c("low", "medium", "high")))
library(stringr)
train0 <- train_df[1:500, c('listing_id', 'description')]
train0$description1 <- unlist(train0 %>% select(description) %>% map(dejunk))
dejunk <- function(a){
a <- gsub('<a\\s+website_redacted', '',a)
a <- gsub('<\\S+\\s*/*>', ' ', a)
a <- gsub('\\S+\\s*@\\s*\\S+', ' ', a)
a <- gsub('\\d+[-]*\\d+[-]\\d+', ' ', a)
a <- gsub('\\W+', ' ', a)
}
train0$description1 <- unlist(train0 %>% select(description) %>% map(dejunk))
train0$description1[1]
train0$description1[10]
train0$description1[100]
train0$description[100]
train0$description <- NULL
str(train0)
train1 <- train0 %>%
unnest_tokens(word, description1)
str(train1)
nrow(train1)
train1[1:10]
train1[1:10,]
train0[1,]
train0[1,'description1']
lowcase('ABC')
tolower('ABC')
a <- tolower(a)
train0 <- train_df[1:500, c('listing_id', 'description')]
dejunk <- function(a){
a <- gsub('<a\\s+website_redacted', '',a)
a <- gsub('<\\S+\\s*/*>', ' ', a)
a <- gsub('\\S+\\s*@\\s*\\S+', ' ', a)
a <- gsub('\\d+[-]*\\d+[-]\\d+', ' ', a)
a <- gsub('\\W+', ' ', a)
a <- tolower(a)
}
train0$description1 <- unlist(train0 %>% select(description) %>% map(dejunk))
train0$description <- NULL
train0$description1[1]
?inner_join
train1 <- train0 %>%
unnest_tokens(word, description1)
names(train1)
senti <- train1 %>%
inner_join(get_sentiments('bing'))
nrow(senti)
str(senti)
senti[1:20]
senti[1:20,]
q()
