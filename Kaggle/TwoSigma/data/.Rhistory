packages <- c("jsonlite", "dplyr", "purrr", "tidytext", "ggplot2", "lubridate")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
if (Sys.info()[1] == 'Windows'){
setwd('C:/Users/alin/Documents/SelfStudy/MyLearning/Kaggle/TwoSigma/data')
}else{
setwd('/home/alin/MyLearning/Kaggle/TwoSigma/data')
}
data <- fromJSON("train.json")
library(tidyr)
library(stringr)
raw_features <- data[c(9,7)] %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id))
feature_df <- data[c(9,7)] %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id))
feature_df$features <- apply(feature_df[,2], 1, function(l) tolower(paste(unlist(l), collapse = '|')))
feature_df <- feature_df %>%
transform(features = strsplit(features, '|', fixed = TRUE)) %>%
unnest(features) %>%
tibble::as_tibble(.)
pet_df <- feature_df %>%
filter(str_detect(features, '(^|\\s)(pet|cat|dog)(s$|s\\s|\\s|$)' )) %>%
mutate(pet = 1 - 2* as.integer(str_detect(features, '(^|\\s)no\\s+(pet|cat|dog)'))) %>%
select(listing_id, pet) %>%
group_by(listing_id) %>%
summarise(pet = max(pet))
df <- data_frame(id = c(1,2,3,4,5), a = c(1,2,3,4,5))
df1 <- data_frame(id = c(1,2,3), b = c(1,2,3))
x <-df %>%
left_join(df1)
x
x[is.na(x$b), 'b'] <- 0
x
feature1_df <- feature_df %>%
left_join(pet_df) %>%
select(listing_id, pet)
feature1_df
feature1_df[is.na(feature1_df$pet), 'pet'] <- 0
table(feature1_df$pet)
nrow(pet_df)
nrow(feature1_df)
table(pet_df$pet)
length(unique(feature1_df$listing_id))
feature1_df <- raw_features %>%
left_join(pet_df) %>%
select(listing_id, pet)
nrow(feature1_df)
table(feature1_df$pet)
feature1_df[is.na(feature1_df$pet), 'pet'] <- 0
feature1_df[is.na(feature1_df$pet), 'pet'] <- 0
table(feature1_df$pet)
feature_df
a <- unique(feature_df$features)
length(a)
a
a[1:10]
laundry_df <- feature_df %>%
filter(str_detect(features, 'laundry'))
laundry_df
a <- unique(laundry_df$features)
length(a)
a
laundry_df <- feature_df %>%
filter(str_detect(features, 'laundry')) %>%
mutate(laundry = 1) %>%
select(listing_id, laundry) %>%
group_by(listing_id) %>%
summarise(laundry = max(laundry))
laundry_df
a[1:10]
a <- unique(feature_df$features)
a[1:10]
a[11:20]
fee_df <- feature_df %>%
filter(str_detect(features, 'fee'))
a <- unique(fee_df$features)
length(a)
a
fee_df <- feature_df %>%
filter(str_detect(features, 'fee')) %>%
filter(str_detect(features, '(^|\\s)no(\W)'))
fee_df <- feature_df %>%
filter(str_detect(features, 'fee')) %>%
filter(str_detect(features, '(^|\\s)no(\\W)'))
a <- fee_df$features
a
a <- unique(a)
a
fee_df <- feature_df %>%
filter(str_detect(features, 'fee')) %>%
filter(str_detect(features, '(^|\\s)no(\\W)'))
fee_df <- feature_df %>%
filter(str_detect(features, 'fee'))
a <- unique(fee_df$features)
a
fee_df <- feature_df %>%
filter(str_detect(features, '(\\W)fee'))
a <- unique(fee_df$features)
a
fee_df <- feature_df %>%
filter(str_detect(features, '(\\W)fee(\\W|$)'))
a <- unique(fee_df$features)
a
fee_df <- feature_df %>%
filter(str_detect(features, '(\\W)fee(\\W|$)')) %>%
mutate(fee = as.integer(str_detect(features, '(^|\\s)no(\\W)')))
fee_df
fee_df[300:330]
fee_df[300:330,]
fee_df[3000:3300,]
table(fee_df$fee)
ee_df <- feature_df %>%
filter(str_detect(features, '(\\W)fee(\\W|$)')) %>%
mutate(fee = 2 * as.integer(str_detect(features, '(^|\\s)no(\\W)')) - 1)
fee_df <- feature_df %>%
filter(str_detect(features, '(\\W)fee(\\W|$)')) %>%
mutate(fee = 2 * as.integer(str_detect(features, '(^|\\s)no(\\W)')) - 1)
table(fee_df$fee)
fee_df <- feature_df %>%
filter(str_detect(features, '(\\W)fee(\\W|$)')) %>%
mutate(fee = 2 * as.integer(str_detect(features, '(^|\\s)no(\\W)')) - 1) %>%
select(listing_id, fee) %>%
group_by(listing_id) %>%
summarise(fee = max(fee))
fee_df
table(fee_df$fee)
a[1:10]
a <- unique(feature_df$features)
a[1:20]
pool_df <- feature_df %>%
filter(str_detect(features, '(\\W|^)pool(\\W|$)'))
pool_df
a <- unique(pool_df$features)
a
pool_df <- feature_df %>%
filter(str_detect(features, '(\\W|^)pool(\\W|$)')) %>%
mutate(pool = 1) %>%
select(listing_id, pool) %>%
group_by(listing_id) %>%
summarise(pool = max(pool))
# unlist every variable except `photos` and `features` and convert to tibble
vars <- setdiff(names(data), c("photos", "features"))
#library(tibble)?
#library(purrr)
train_df <- map_at(data, vars, unlist) %>%
tibble::as_tibble(.) %>%
mutate(interest_level = factor(interest_level, c("low", "medium", "high")))
train0 <- train_df[1:500, c('listing_id', 'description')]
dejunk <- function(a){
a <- gsub('<a\\s+website_redacted', '',a)
a <- gsub('<\\S+\\s*/*>', ' ', a)
a <- gsub('\\S+\\s*@\\s*\\S+', ' ', a)
a <- gsub('\\d+[-]*\\d+[-]\\d+', ' ', a)
a <- gsub('\\W+', ' ', a)
a <- gsub('[[:digit:]]', ' ', a)
}
train0
a <- train0$description
a[1]
train0$description_tr <- unlist(train0 %>% select(description) %>% map(dejunk))
train0
train0$description_tr[1]
train0$description[1]
train0 %>%
mutate(description_tr1 = dejunk(description))
train0$description_tr1
names(train0)
trian0 <- train0 %>%
mutate(description_tr1 = dejunk(description))
names(train0)
train0
train0 <- train0 %>%
mutate(description_tr1 = dejunk(description))
train0
train0$description_tr1[1]
train0description_tr[1]
train0$description_tr[1]
train0$description_tr[18]
train0$description_tr1[18]
train0$description[18]
train0 <- train_df[1:500, c('listing_id', 'description')]
train0 <- train0 %>%
mutate(description = dejunk(description))
train0$description[18]
train1 <- train0 %>%
unnest_tokens(word, description) %>%
anti_join(stop_words)
train1
tidy_train0 <- train0 %>%
unnest_tokens(word, description_tr) %>%
anti_join(stop_words)
tidy_train0 <- train0 %>%
unnest_tokens(word, description) %>%
anti_join(stop_words)
word_cnt <- tidy_train0 %>%
count(listing_id) %>%
mutate(word_cnt = n)
word_cnt
length(unique(word_cnt$listing_id))
names(data)
q()
