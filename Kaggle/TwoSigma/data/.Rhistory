library(dplyr)
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
text
text_df <- data_frame(line = 1:4, text = text)
text_df
library(tidytext)
install.packages("tidytext")
text_df %>%
unnest_tokens(word, text)
library(tidytext)
text_df %>%
unnest_tokens(word, text)
q()
library(dplyr)
install.packages(c("dplyr", "tidytext"))
library(dplyr)
library(tidytext)
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
q()
library(uuid)
q()
library(devtools)
a <- getwd()
a
setwd(paste(a, "/MyLearning"))
setwd("/home/alin/MyLearning")
setwd(a)
b <- paste(a, "/MyLearning")
b
b <- paste(strip(a), "/MyLearning")
length((a))
length(a)
a[1]
class(a)
as.vector(a)
b <- character(a)
b <- c('a','x')
paste(b)
a <- "/home/alin/data"
?gsub
gsub("code", "data", a)
wd <- getwd()
wd
wd <- gsub("alin", "xlin", wd)
wd
install.packages(c("jsonlite", "purrr", "tibble", "ggplot2", "lubridate"))
q()
q()
library(data.table)
DT = data.table(ID = c("b","b","b","a","a","c"), a = 1:6, b = 7:12, c = 13:18)
Dt
DT
DT[, .(.N), by = .(ID)]
DT[, .(.N), by = ID]
DT[, .N, by = ID]
class(DT[, .N, by = ID])
DT[, gg=.N, by = ID]
DT[, gg=(.N), by = ID]
DT[, .(gg=.N), by = ID]
q()
require(xgboost)
DT
library(data.table)
DT = data.table(ID = c("b","b","b","a","a","c"), a = 1:6, b = 7:12, c = 13:18)
Dt
DT
DT[, ":="(filter = 0)]
DT
DT$f1 <- 1
DT
if (Sys.info()[1] == 'Windows'){
setwd('C:/Users/alin/Documents/SelfStudy/MyLearning/Kaggle/TwoSigma/data')
}else{
setwd('/home/alin/MyLearning/Kaggle/TwoSigma/data')
}
packages <- c("jsonlite", "dplyr", "purrr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
library(data.table)
library(xgboost)
library(caret)
library(stringr)
library(quanteda)
library(lubridate)
library(stringr)
library(Hmisc)
library(Matrix)
install.packages(c("caret", "Hmisc"))
packages <- c("jsonlite", "dplyr", "purrr")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
library(data.table)
library(xgboost)
library(caret)
library(stringr)
library(quanteda)
library(lubridate)
library(stringr)
library(Hmisc)
library(Matrix)
t1 <- fromJSON("train.json")
t1_feats <- data.table(listing_id=rep(unlist(t1$listing_id), lapply(t1$features, length)), features=unlist(t1$features))
t1_feats[1:10,]
t0 <- t1[1:10,]
class(t1)
t1[1:3]
length(t1)
names(t1)
a <- t1$features
length(a)
b <- a[1:10]
b
g <- lapply(b, length)
g
class(t1_feats)
nrow(t1_feats)
t1_photos <- data.table(listing_id=rep(unlist(t1$listing_id), lapply(t1$photos, length)), features=unlist(t1$photos))
nrow(t1_photos)
t1_photos[1:2,]
vars <- setdiff(names(t1), c("photos", "features"))
t1<- map_at(t1, vars, unlist) %>% as.data.table(.)
names(t1)
t1[,":="(filter=0)]
nrow(t1)
class <- data.table(interest_level=c("low", "medium", "high"), class=c(0,1,2))
class
t1 <- merge(t1, class, by="interest_level", all.x=TRUE, sort=F)
t1[1:10,]
names(t1)
table(t1$class)
library(caTools)
split <- sample.split((1:nrow(t1)), SplitRatio = 0.7)
split[1:10]
split <- as.integer(split)
split[1:10]
table(split)
ts1 <- t1
table(ts1$filter)
ts1$filter <- split
table(ts1$filter)
ts1[,":="(created=as.POSIXct(created)
,dummy="A"
,low=as.integer(interest_level=="low")
,medium=as.integer(interest_level=="medium")
,high=as.integer(interest_level=="high")
,display_address=trimws(tolower(display_address))
,street_address=trimws(tolower(street_address)))]
names(ts1)
table(ts1$low)
ts1[1, 'streat_address']
ts1[1, streat_address]
ts1[1, 'street_address']
table(ts1$filter)
ts1$filter <- 1 - split
table(ts1$filter)
ts1[, ":="(pred0_low=sum(interest_level=="low")/sum(filter==0),
pred0_medium=sum(interest_level=="medium")/sum(filter==0),
pred0_high=sum(interest_level=="high")/sum(filter==0))]
names(ts1)
table(ts1$pred0_low)
table(ts1$interest_level, ts1$filter)
23932/(2692+23932+7922)
(23932+10352)/(2692+23932+7922)
valid <- ts1[filter == 1,]
class(valid)
nrow(valid)
table(valid$interest_level)
ts1[filter == 1, interest_level ] <- '-1'
names(ts1)
names(t1)
ts1[filter == 1, 'interest_level' ] <- '-1'
table(ts1$interest_level, ts1$filter)
ts1[, ":="(pred0_low=sum(interest_level=="low")/sum(filter==0),
pred0_medium=sum(interest_level=="medium")/sum(filter==0),
pred0_high=sum(interest_level=="high")/sum(filter==0))]
# merge
table(ts1$pred0_low)
29332/(2692+23932+7922)
23932/(2692+23932+7922)
names(ts1)
ts1[1, 'features']
ts1_feats[1:5,]
ts1_feats <- t1_feats
ts1_photos <- t1_photos
ts1_feats[1:5,]
ts1_feats[,features:=gsub(" ", "_", paste0("feature_",trimws(char_tolower(features))))]
q()
