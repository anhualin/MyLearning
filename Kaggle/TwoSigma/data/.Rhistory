packages <- c("jsonlite", "dplyr", "purrr", "tidytext", "ggplot2", "lubridate")
purrr::walk(packages, library, character.only = TRUE, warn.conflicts = FALSE)
#setwd('C:/Users/alin/Documents/SelfStudy/MyLearning/Kaggle/TwoSigma/data')
setwd('/home/alin/MyLearning/Kaggle/TwoSigma/data')
data <- fromJSON("train.json")
feature_df <- map_at(data, vars, unlist) %>%
tibble::as_tibble(.) %>%
select(listing_id, features)
feature_df <- map_at(data, vars, unlist) %>%
tibble::as_tibble(.)
?map_at
feature_df <- map_at(data, vars, unlist) %>%
tibble::as_tibble(.) %>%
select(listing_id, features, interest_level) %>%
mutate(interest_level = factor(interest_level, c("low", "medium", "high")))
names(data)
class(data$features)
feature_df <- data %>%
select(listing_id, features)
features
str(data)
class(data)
feature_df <- data %>%
tibble::as_tibble(.)%>%
select(listing_id, features)
feature_df
names(data)
feature_df <- mat_at(data, names(data), unlist) %>%
tibble::as_tibble(.)%>%
select(listing_id, features)
feature_df <- map_at(data, names(data), unlist) %>%
tibble::as_tibble(.)%>%
select(listing_id, features)
feature_df <- map_at(data, c('listing_id', 'features'), unlist) %>%
tibble::as_tibble(.)%>%
select(listing_id, features)
feature_df <- map_at(data, c('listing_id', 'features'), unlist) %>%
tibble::as_tibble(.)
class(data)
length(data)
names(data)
class(data[1])
length(data[1])
a <- data[1]
class(a)
length(a)
b <- a[[1]]
class(b)
length(b)
b[1]
c <- unlist(a)
class(c)
length(c)
c[1]
c[3]
lenght(data)
length(data)
a <-data[c(1,3)]
names(a)
names(data)
a <- data[c(9,7)]
names(a)
feature_df <- a %>%
tibble::as_tibble(.)
feature_df
eature_df <- a %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id))
feature_df <- a %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id))
feature_df
?mutate
feature_df <- a %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id), features = unlist(features))
feature_df <- a %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id)) %>%
unnest(features)
library(tidyr)
feature_df <- a %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id)) %>%
unnest(features)
feature_df <- a %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id)) %>%
select(listing_id)
feature_df <- a %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id))
feature_df
f <- feature_df$features
class(f)
length(f)
f[1]
f[2]
g <- unlist(f)
class(g)
length(g)
g[1]
g[2]
a <- f[10]
a
class(a)
length(a)
a[[1]]
b <- f[1]
b
class(b)
length(b)
b[1]
class(b[1])
length(b[1])
b
b[1]
b[[1]]
class(b[[1]])
length(b[[1]])
is.vector(b[[1]])
feature_df
a <- feature_df[1:5,]
a
a[4, 'features']
is.empty(a[4,'features'])
b <- a[4, 'features']
b
b[[1]]
a
a[1, 'features']
unlist(a[1, 'features'])
unlist(a[4, 'features'])
a$fea <- a %>% select(features) %>% map(unlist)
a
a[1, features]
a[1, 'features']
a[1, 'fea']
a[1,'fea'][[1]]
a$features[[1]]
g <- a$features[[1]]
class(g)
is.vector(g)
length(g)
dlist
g <- a[1, 'features']
g
g[[1]]
is.vector(g[[1]])
length(g[[1]])
x <- g[[1]]
x
length(x)
is.list(x)
y <- x[[1]]
y
is.list(y)
is.vector(y)
length(y)
g <- a[1, 'features']
b <- g[1][[1]]
b
b <- g[[1][[1]]
b <- g[[1]][[1]]
b
is.vector(b)
is.list(b)
b <- a %>%
mutate(fea = dlist(features))
dlist <- function(l){
l[[1]][[1]]
}
b <- a %>%
mutate(fea = dlist(features))
b
b[1, 'fea']
b[1, 'features'][[1]][[1]]
a$fea <- unlist(a %>% select(features) %>% map(dlist))
a
dlist <- function(l){
l[[1]]
}
b <- a %>%
mutate(fea = dlist(features))
a$fea <- unlist(a %>% select(features) %>% map(dlist))
a$fea <- a %>% select(features) %>% map(dlist)
a
a <- feature_df[1:5,]
dlist <- function(l){
l[[1]][[1]]
}
a$fea <- a %>% select(features) %>% map(dlist)
a
a[1, 'features']
a[1, 'fea']
a[1, 'fea'][1]
a[1, 'fea'][[1]]
unlist(a[1, 'fea'])
unlist(a[1, 'features'])
a <- feature_df[1:5,]
a
a
a$fea <- a %>% select(features) %>% map(unlist)
a
x <- a[1, 'fea']
x
x[1]
x[[1]]
a[1, 'features'][[1]]
a <- feature_df[1:5,]
a
x <- a[1, 'features']
x
class(x)
x1 <- unlist(x)
x
class(x)
class(x1)
is.vector(x1)
is.list(x1)
x1
unlist(a[3, 'features'])
length(unlist(a[3, 'features']))
y <- apply(a[,'features'], 2, unlist)
y
a <- feature_df[1:5,]
a$fea <- apply(a[, 'features'], 2, unlist)
a$fea <- apply(a[, 'features'], 2, unnest)
a <- feature_df[1:5,]
a
?unnest
df <- data_frame(
x = 1:3,
y = c("a", "d,e,f", "g,h")
)
df
df[2, 'y']
class(df[2,'y'])
b <- df[2,'y']
b
class(b)
df
g <- df %>%
unnest(y)
g
g <- df %>%
transform(y = strsplit(y, ","))
g
g[2, 'y']
g[1, 'y']
a[1, 'features']
a <- feature_df[1:5,]
a
x <- unlist(a[1, 'features'])
x
is.vector(x)
paste(x, sep = '|')
paste(x, collapse  = '|')
paste(unlist(a[3, 'features']), collapse = '|')
a <- feature_df[1:5,]
dlist <- function(l){
paste(unlist(l, collapse = '|'))
}
b <- a %>%
mutate(fea = dlist(features))
dlist <- function(l){
paste(unlist(l), collapse = '|')
}
b <- a %>%
mutate(fea = dlist(features))
b
b$fea
b <- a %>%
mutate(features = dlist(features))
b
b[1,]
b[1, 'features']
g <- b %>%
transform(features = strsplit(features, '|')) %>%
unnest(features)
g
b <- a %>%
mutate(features = dlist(features))
b[1, 'features']
x <- strsplit(b[1, 'features'], '|')
d <- b[1, 'features']
d
unlist(d)
b <- a %>%
mutate(features = dlist(features))
g <- b %>%
transform(features = strsplit(unlist(features), '|')) %>%
unnest(features)
g
d <- unlist(a[1, 'features'])
d
k <- strsplit((d, '|'))
k <- strsplit(d, '|')
k
k <- strsplit(d, "|")
k
d
class(d)
is.vector(d)
b
d <- b[1, 'features']
d
d$features
strsplit(d, "|")
strsplit(d$features, "|")
d$features
t <- d$features
t
class(t)
is.vector(t)
length(t)
y <- "d,e,f"
strsplit(y, ',')
y<-"ddd,e1,fff2"
strsplit(y, ",")
d
t
y <- "ddd|yy1|xw"
strsplit(y, '|')
?strsplit
strsplit(y, '|', fixed = TRUE)
E
b <- a %>%
mutate(features = dlist(features))
g <- b %>%
transform(features = strsplit(features, '|', fixed = TRUE)) %>%
unnest(features)
g
a[1,]
View(g)
View(g)
a[1,'features']
unlist(a[1,'features'])
g <- b %>%
transform(features = strsplit(features, '|', fixed = TRUE))
g
str(g)
dlist <- function(l){
strsplit(paste(unlist(l), collapse = '|'), '|', fixed = TRUE)
}
a$fea <- apply(a[, 'features'], 2, unnest)
a$fea <- apply(a[, 'features'], 2, dlist)
a
a$fea
a
a$fea[1]
class(a$fea[1])
dlist <- function(l){
unlist(strsplit(paste(unlist(l), collapse = '|'), '|', fixed = TRUE))
}
$fea <- apply(a[, 'features'], 2, dlist)
a$fea <- apply(a[, 'features'], 2, dlist)
a <- feature_df[1:5,]
g <- c(c(1,2), c(3,4))
g
df <- data_frame(
x = 1:3,
y = c("a|xxx|eee", "d|e|f", "g,h")
)
df %>%
transform(y = strsplit(y, ",")) %>%
unnest(y)
df %>%
transform(y = strsplit(y, "|")) %>%
unnest(y)
df %>%
transform(y = strsplit(y, "|", fixed = TRUE)) %>%
unnest(y)
t <- df$y
class(t)
g1 <- a$features
class(g1)
is.vector(t)
y1 <- a$features
y1
y2 <- unlist(y1)
y2
b
b$features
y1 <- b$features
class(y1)
dlist <- function(l){
paste(unlist(l), collapse = '|')
}
b <- apply(a[,2], 2, dlist)
b
b <- apply(a[,2], 1, dlist)
b
a$features <- apply(a[,2], 1, dlist)
a
a[1,'features']
a[2, 'features']
a %>%
transform(feature = strsplit(features, "|", fixed = TRUE)) %>%
unnest(feature)
a
a[4, 'features']
class(a$features)
a %>%
transform(features = strsplit(features, "|", fixed = TRUE)) %>%
unnest(features)
View(a)
feature_df[1, 'features']
unlist(feature_df[1, 'features'])
unlist(feature_df[2, 'features'])
names(data)
feature_df <- data[,c(9,7)] %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id))
names(data)
g <- data[, c(9,7)]
g <- data[, c(7,9)]
g <- data[, 7]
nrow(data)
data
class(data)
g <- data[c(9,7)]
names(g)
feature_df <- data[c(9,7)] %>%
tibble::as_tibble(.) %>%
mutate(listing_id = unlist(listing_id))
feature_df
feature_df$features <- apply(feature_df[,2] 1, function(l) paste(unlist(l), collapse = '|'))
feature_df$features <- apply(feature_df[,2], 1, function(l) paste(unlist(l), collapse = '|'))
feature_df[100, 'features']
feature_df[1000, 'features']
feature_df %>%
transform(features = strsplit(features, '|', fixed = TRUE)) %>%
unnest(features)
feature_df
feature_df[1:10, c('listing_id', 'features')]
feature_df[1, 'features']
g <- feature_df %>%
transform(features = strsplit(features, '|', fixed = TRUE)) %>%
unnest(features)
g
g[1, 'features']
g[2, 'features']
g
q()
